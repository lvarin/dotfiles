# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
#set $term terminator
# gnome-terminal
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu wofi
set $menu rofi -show drun -modi run -show-icons


#
gaps inner 10
gaps outer 5
# Only enable gaps on a workspace when there is at least one container
#smart_gaps on
smart_borders no_gaps
default_border pixel 5
for_window [class="^.*"] border pixel 2
#

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/Pictures/Wallpaper.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
output DP-1 resolution 2560x1440 position 1920,0
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
        timeout 300 'swaylock -f -c 000000' \
        timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
        before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#
# Autostart
#
exec --no-startup-id blueman-applet
exec --no-startup-id nm-applet --sm-disable
exec --no-startup-id gnome-keyring-daemon
exec --no-startup-id keepassxc
exec --no-startup-id nextcloud
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway XDG_SESSION_DESKTOP=sway
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Lock Screen
    bindsym $mod+Escape exec swaylock -f -c 000000

    # Kill focused window
    bindsym $mod+shift+q kill

    # Start your launcher
    bindsym $mod+slash exec $menu

    # Screen Shot
    #bindsym $mod+Print exec grim -g "$(slurp)"

    # Open display manager
    bindsym $mod+x exec wdisplays

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    for_window [app_id="zenity"] floating enable

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

#
# Move around
#
# Name the workspaces
set $tag0 "0 "
set $tag1 "1 x"
set $tag2 "2 "
set $tag3 "3 xx"
set $tag4 "4 "
set $tag5 "5 "
set $tag6 "6 "
set $tag7 "7 zoom"
set $tag8 "8 "
set $tag9 "9 "
set $tag10 "10 "
set $tag11 "11 /"
set $tag12 "12 "

# switch to workspace
bindsym $mod+grave workspace number $tag0
bindsym $mod+1 workspace number $tag1
bindsym $mod+2 workspace number $tag2
bindsym $mod+3 workspace number $tag3
bindsym $mod+4 workspace number $tag4
bindsym $mod+5 workspace number $tag5
bindsym $mod+6 workspace number $tag6
bindsym $mod+7 workspace number $tag7
bindsym $mod+8 workspace number $tag8
bindsym $mod+9 workspace number $tag9
bindsym $mod+0 workspace number $tag10
bindsym $mod+minus workspace number $tag11
bindsym $mod+equal workspace number $tag12

# move focused container to workspace
bindsym $mod+Shift+grave move container to workspace number $tag0
bindsym $mod+Shift+1 move container to workspace number $tag1
bindsym $mod+Shift+2 move container to workspace number $tag2
bindsym $mod+Shift+3 move container to workspace number $tag3
bindsym $mod+Shift+4 move container to workspace number $tag4
bindsym $mod+Shift+5 move container to workspace number $tag5
bindsym $mod+Shift+6 move container to workspace number $tag6
bindsym $mod+Shift+7 move container to workspace number $tag7
bindsym $mod+Shift+8 move container to workspace number $tag8
bindsym $mod+Shift+9 move container to workspace number $tag9
bindsym $mod+Shift+0 move container to workspace number $tag10
bindsym $mod+Shift+minus move container to workspace number $tag11
bindsym $mod+Shift+equal move container to workspace number $tag12
#
bindsym $mod+bracketright move workspace to output right
bindsym $mod+bracketleft move workspace to output left
#

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Screenshot
#
    bindsym $mod+Print exec grimshot save area
    bindsym $mod+n exec .dotfiles/bin/rename_workspace.sh
#
# Audio
#
    bindsym XF86AudioRaiseVolume exec ~/.dotfiles/bin/volume.sh +5%
    bindsym XF86AudioLowerVolume exec ~/.dotfiles/bin/volume.sh -5%
    bindsym XF86AudioMute exec ~/.dotfiles/bin/volume.sh toggle
    bindsym XF86AudioPlay exec ~/.dotfiles/bin/media-client pause
    bindsym XF86AudioPrev exec ~/.dotfiles/bin/media-client prev
    bindsym XF86AudioNext exec ~/.dotfiles/bin/media-client next
    bindsym XF86AudioStop exec ~/.dotfiles/bin/media-client stop

#

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    #status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
bar swaybar_command waybar

# Property Name             Border  BG      Text    Indicator Child-border

include /etc/sway/config.d/*


client.focused              #FF0000 #2f343f #4477ff #4477ff   #4477ff
